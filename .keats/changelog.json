{
  "0.1.5a12": {
    "description": "bug fixes",
    "date": "2019-12-12T21:04:58.993258",
    "changes": [
      "Planner.optimize bug fixes"
    ]
  },
  "0.1.5a11": {
    "description": "bug fixes",
    "date": "2019-12-12T20:57:28.457117",
    "changes": [
      "fixed bug in which data associations without an id would attempt to save to server",
      "added method to delete data associations from Collection.parts",
      "added explicit method to add associations to parts"
    ]
  },
  "0.1.5a10": {
    "description": "New major features",
    "date": "2019-12-12T16:05:57.054929",
    "changes": [
      "`Collection` model completely reworked.",
      "`Collection` now has multiple 'views' to view dat, including sample_id, sample, data_value, data_associations, part_associations, and parts.",
      "`Collection` sample_ids and data_associations c can be updated using advanced indexing",
      "`Collection` update now will automatically update DataAssociations along with the Collection itself",
      "DataAssociator refactored and fixed",
      "Items now automatically upddate their data associations upon save"
    ]
  },
  "0.1.5a9": {
    "description": "slimmed dependencies",
    "date": "2019-11-19T18:48:57.740353",
    "changes": [
      "removed `arrow`",
      "removed `pandas`",
      "changed browser.samples_to_df to check if pandas is installed"
    ]
  },
  "0.1.5a8": {
    "description": "bug fixes",
    "date": "2019-11-19T18:33:38.350971",
    "changes": [
      "fixes loggable class and adds tests",
      "fixes issue with attribute access in session",
      "fixes issue whe3re Plan.one() return None for Aquarium 2.7",
      "Plan no longer includes wires on query"
    ]
  },
  "0.1.5a6": {
    "description": "",
    "date": "2019-08-08T14:52:14.631040",
    "changes": []
  },
  "0.1.5a5": {
    "description": "bug fix",
    "date": "2019-08-08T14:43:40.229011",
    "changes": [
      "fixes bug with field values that have no operations when using planner.set_to_available_item"
    ]
  },
  "0.1.5a4": {
    "description": "bug fix with setting available items",
    "date": "2019-08-08T14:37:26.698386",
    "changes": [
      "fixed RESTRICT_TO_ONE for item_preference in planner",
      "added RESTRICT_TO_ONE_ON_SERVER that looks at all reserved items on the server"
    ]
  },
  "0.1.5a3": {
    "description": "bug fixes",
    "date": "2019-08-06T14:42:09.748998",
    "changes": [
      "fixes find(id=0) bug that raised a mysterious error",
      "session.<Model>.all() no longer raises error when cache is being used"
    ]
  },
  "0.1.5a2": {
    "description": "minor bug fixes",
    "date": "2019-07-28T13:08:07.331007",
    "changes": [
      "Fixed error that occurred when Planner and PlannerLayout had no operations",
      "Added 'using_verbose' to session factory. Create a verbose session using `session(using_verbose=True)`",
      "Improved logging library. Logging library accessible via '<model>.log' as in `session.log.info(<msg>)`",
      "Traceback limit for logging can be set using `session.log.set_tb_limit(<limit>)`"
    ]
  },
  "0.1.5a1": {
    "description": "installation of keats",
    "date": "2019-07-26T08:46:10.461557",
    "changes": [
      "keats manager tool installation",
      "remove warnings that occurred during plan.save() and plan.update()"
    ]
  },
  "0.1.5a": {
    "description": "",
    "date": "",
    "changes": [
      "fixes a planner.open() bug"
    ]
  },
  "0.1.4a": {
    "description": "",
    "date": "",
    "changes": [
      "fixes a planner.save() bug"
    ]
  },
  "0.1.3a": {
    "description": "",
    "date": "",
    "changes": [
      "added pydent.login method, which returns an AqSession instance with option to input password securely. Useful for live demos."
    ]
  },
  "0.1.2a": {
    "description": "",
    "date": "",
    "changes": [
      "#### Major changes\n\n* Planner class - a convenience class creating and editing plans in Aquarium.\n* `Browser` - a convenience class for browsing Samples and other models. Includes caching and query bundling to reduce\nnumber of queries and increase script speed.\n* new queries (one, last, first)\n* removed requirement of Marshmallow serialization/deserialization dependency, replaced by faster code\n* Removed `marshmallow` as a serialization/deserialization library. A custom library is now used that avoids unnecessary\nfield validation. As a result, model `load` and `dump` is many fold faster.\n\n#### Minor changes\n\n* Continuous validation - Cannot set Nested/Relationship attributes to arbitrary values. E.g. `sample_type.sample = 5` will raise an Exception, but setting `sample_type.sample = mysample` will not.\n  * `sample_type.sample = mysample` will also automatically set the `sample_id` attribute, since this is defined in the HasOne relationship as an attribute_key. But setting `sample_type.sample.id = 5` will not change the `sample_id` key.\n* setting `None` will no longer trigger a query attempt. In previous versions, a relationship whose value was set to `None` would intialize a query attempt anytime `getattr` accessed a model attribute, using round-about exception handling to avoid errors; this made it impossible to set a relationship attribute to `None.` Now, a query will only be initiated if the key does not exist in the models underlying data. This means that data received from Aquarium will be used as expected (i.e. setting `{\"sample\": None}` will not try to initiate a query next time `model.sample` is called).\n  * `FieldValue.set_value` now handles None values. In previous version, None values passed into set_field_value would be ignored, making it difficult to *reset* a FieldValue. For example `field_value.set_value(sample=None)` will now reset the sample value for the FieldValue instead of being ignored.\n* `primary_key` will return an `id`. If `id==None`, then the `rid` is returned (e.g. `rid1023`)\n* `HasOne` relationship will automatically set the corresponding model reference when setting attributes. E.g. `sample.sample_type = myst` will also automatically set `sample.sample_type_id = myst.id` since this is defined in the `HasOne` field. Similar tracking is not implemented for other relationships.\n\nDeveloper changes\n\n* `poetry` https://poetry.eustace.io/ now used as the package manager, replacing *pipenv*\n* vcrpy` is used to cache and store queries for deterministic testing.\n* Improved documentation."
    ]
  }
}