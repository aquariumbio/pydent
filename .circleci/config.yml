# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  buildwithrequirements:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-dev.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements-dev.txt" }}

      # run tests using requirements.txt
      - run:
          name: run tests
          command: |
            mkdir -p ~/pytest_results
            python3 -m venv venv
            . venv/bin/activate
            pytest tests --ignore tests/archived

      - store_artifacts:
          path: test-reports

      - store_test_results:
          path: ~/pytest_results

  buildwithsetup:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install .
            pip3 install pytest

      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"

      # run tests using requirements.txt
      - run:
          name: run tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pytest tests --ignore tests/archived

      - store_artifacts:
          path: test-reports

      - store_test_results:
          path: ~/pytest_results

  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            make deploy

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - buildwithrequirements:
          filters:
            tags:
              only: /.*/
      - buildwithsetup:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - buildwithrequirements
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/