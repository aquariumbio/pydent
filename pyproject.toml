[tool.poetry]
name = "pydent"
version = "0.1.5a18"
description = "Aquarium's Python API for planning, executing, and analyzing scientific experiments."
documentation = "https://www.klavinslab.org/trident"
repository = "https://www.github.com/klavinslab/trident"
homepage = "https://www.github.com/klavinslab/trident"
authors = ["jvrana <justin.vrana@gmail.com>", "Ben Keller <bjkeller@uw.edu>", "Eric Klavins <klavins@uw.edu>"]
readme = 'README.md'
license = "MIT"

[tool.poetry.dependencies]
python = "^3.6"
requests = "^2.22"
inflection = "^0.3.1"
tqdm = "^4.32"
networkx = "^2.3"
nest-asyncio = "^1.0"
colorlog = "^4.0"
retry = "^0.9.2"

[tool.poetry.dev-dependencies]
pytest = "^4.6"
pytest-cov = "^2.7"
pylint = "^2.3"
udatetime = "^0.0.16"
marshmallow = "^2.19"
pytest-benchmark = "^3.2"
pygal = "^2.4"
pygaljs = "^1.0"
yapf = "^0.27.0"
dill = "^0.2.9"
black = "=19.3b0"
pytest-sugar = "^0.9.2"
vcrpy = "^2.0"
pre-commit = "^1.17"
sphinx = { version = "^2.1", optional = true }
sphinx-bootstrap-theme = { version = "^0.7.1", optional = true }
docformatter = { version = "^1.1", optional = true }
nbsphinx = { version = "^0.4.2", optional = true }
pandoc = { version = "^1.0", optional = true }
recommonmark = {version="^0.5.0", optional = true}
tox = "^3.12"
tox-conda = "^0.2.0"
sphinx_autodoc_typehints = "^1.8"
autodocsumm = "^0.1.11"
numpy = "^1.17"
sphinx-jsonschema = "^1.12"
liccheck = "^0.4.2"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-bootstrap-theme", "docformatter", "nbsphinx", "pandoc", "recommonmark", "sphinx-jsonschema"]

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.liccheck]
authorized_licenses = [
        "bsd",
        "mpl-2.0",
        "new bsd",
        "bsd license",
        "new bsd license",
        "simplified bsd",
        "apache",
        "apache 2.0",
        "apache license 2.0",
        "apache softare",
        "apache software license",
        "gnu lgpl",
        "lgpl with exceptions or zpl",
        "LGPL",
        "isc license",
        "isc license (iscl)",
        "mit",
        "mit license",
        "python software foundation license",
        "zpl 2.1"
]

unauthorized_licenses = [
        "gpl",
        "gpl v2",
        "gpl v3",
        "gpl-2.0",
        "gpl-3.0",
]

[tool.liccheck.authorized_packages]
uuid = "1.30"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
