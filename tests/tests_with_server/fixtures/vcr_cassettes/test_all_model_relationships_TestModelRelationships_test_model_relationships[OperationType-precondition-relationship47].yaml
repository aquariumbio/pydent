interactions:
- request:
    body: '{"model": "OperationType", "method": "where", "arguments": {}, "options":
      {"offset": -1, "limit": 1, "reverse": true}}'
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Connection: [keep-alive]
      Content-Length: ['118']
      Content-Type: [application/json]
      Cookie: [XSRF-TOKEN=xZ6egEhh%2BlChVfXVPVD8YDggenvqtv9YVI1kUABHZSqerspp7tLf1BOFEB5vpSJ3RUUQmElNf2kq8Up%2BqGs3ow%3D%3D;
          _aquarium_NURSERY_production_session=WEdBOGo4U21nWnJkZDByZ2ErSE1FeFpEVkE1OVM4ZFJPTFNNcnd5NlhQOWQyQ2lETk1rVDFnYmNwbFBiWnlnMTFkSzQ1ZFkxUklGcE0rMmNnMmZHVm1PWk9LLzNUVTBCd1liZkxDMVBBeXBmaUEwZHJaTjhvWFNsVFpVQ2Zmd3RyQlNWRlV5NytET3BqNUVraGtldXBFQzh2eEx2emF2cDRxM2lJSFM4OEJIZlpXaUNYblMxREZWc0E5ZnJTMlBEVWhkOFVGNDBWbDVacXEvcC92L0cveklUSmdRN0lYalRGbHJMalc1VnZvWkh4SjJvdzUxU25UdXNzQmFPSERadVFEVmZ3Q1dPaEVFZnlwVVpZR2c1Y2F1VVZTN3lrdWV0TDV6Um9vYUxKWHQ2a01tdlAvMEhhUTdKUW5tM3pHRUFiK0lsWjI5SnFTWDJiYVlGclY0RlppQ21MZVRuOUh0T1hvbnZIbHFZWjZVNzdLVGl0aTFFa2tyVytVeHpZMXM3aWZJMDFycENoblZEblBwTEtGcWRKcFVtMFZzWFJ1TkEyNmVlVkdaWFhPYz0tLTZoVW9XMzJuV0doLys5Y3UxNngxOFE9PQ%3D%3D--1cac2424c270f93e630e78a91a59326644cf5ee8;
          remember_token=SLLRrvtYchvNLhWHJR3FVg; remember_token_NURSERY_production=SLLRrvtYchvNLhWHJR3FVg]
      User-Agent: [python-requests/2.20.0]
    method: POST
    uri: http://52.27.43.242:81/json
  response:
    body: {string: '[{"id":1539,"name":"Make PCR Fragment (copy)","category":"ZAbeTest","deployed":false,"on_the_fly":false,"created_at":"2018-10-29T14:37:27.000-07:00","updated_at":"2018-10-29T14:39:02.000-07:00"}]'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Connection: [keep-alive]
      Content-Type: [application/json; charset=utf-8]
      Date: ['Thu, 01 Nov 2018 04:14:49 GMT']
      ETag: [W/"cac7a4ab9d35e701807538ddac13bc65"]
      Server: [nginx/1.10.3 (Ubuntu)]
      Set-Cookie: [XSRF-TOKEN=Pw0%2BQLUFf9zId9yq7ddpoK3fBEx6PlBH4Z4C%2FUwf1iVkPWqpE7ZaWHqnOWG%2FIre30Lpur9nF0Haf4izT5DOErA%3D%3D;
          path=/, _aquarium_NURSERY_production_session=UXp2anpxSGozSlZrUVFmLzltOWMrVFVtQzE0TGJ3YTA2R0Q4NDhCRUU2RjR3UDBKeHdJVk9BM1oxaGsvanZUeEhSTVVQMlFhV3U5bE5vU1dXam4rR2ZmOHNoL3BUQ29FcjF2b0dja0pKUkNPRVY2RHlpcjRmZHo1dUR2RmpwV3FnZFRrc0FGZTdUWVhuNzVRNnNMWEFKcGtkS3FoeXlmemU2VU52ZmtrRlZXdkZKczJWNE9RWnBtWU5wV0p3WGNpTVJPYW1hdmpEY2ZJL2k5aHZ2b1VpK0Z3dHM2aEloOWVBa0JUVlhBZEgxTFlCVk9DQjltWm42amlSb0MrUXVYczRGWG1GZzkzYTBwWXQ4RC9xdEo2UmUxcGZDeFczclhFalJqamhqRDNTcGZ2QzBpRUpLSUIxWnRlRUo0NEV6bXdNNk9LakQ5WXJwR3gxcFhiS014eVR5Uzl0Vk5sdENmT0ZmcVpMTDhVWC90Y29UY0NvWC9rWkxWVzBCenZDN0VONmtxc2lsSTFxSDNvZ2RMZi9ybmZsdmtqQlJXWGxmUGV5UDF1Umo2dnRtcz0tLU1ERU1URHd6RzFxQXNjYUhQTVZjSHc9PQ%3D%3D--7bbe9e56009c16d38a076e3ce31319231cd6f029;
          path=/; HttpOnly]
      Vary: [Origin]
      X-Content-Type-Options: [nosniff]
      X-Frame-Options: [SAMEORIGIN]
      X-Request-Id: [170be2c9-11c2-4414-8533-41880c9f52f7]
      X-Runtime: ['0.004281']
      X-XSS-Protection: [1; mode=block]
    status: {code: 200, message: OK}
- request:
    body: '{"model": "Code", "method": "where", "arguments": {"parent_id": 1539, "parent_class":
      "OperationType", "name": "precondition"}, "options": {"offset": -1, "limit":
      1, "reverse": true}}'
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Connection: [keep-alive]
      Content-Length: ['183']
      Content-Type: [application/json]
      Cookie: [XSRF-TOKEN=xZ6egEhh%2BlChVfXVPVD8YDggenvqtv9YVI1kUABHZSqerspp7tLf1BOFEB5vpSJ3RUUQmElNf2kq8Up%2BqGs3ow%3D%3D;
          _aquarium_NURSERY_production_session=WEdBOGo4U21nWnJkZDByZ2ErSE1FeFpEVkE1OVM4ZFJPTFNNcnd5NlhQOWQyQ2lETk1rVDFnYmNwbFBiWnlnMTFkSzQ1ZFkxUklGcE0rMmNnMmZHVm1PWk9LLzNUVTBCd1liZkxDMVBBeXBmaUEwZHJaTjhvWFNsVFpVQ2Zmd3RyQlNWRlV5NytET3BqNUVraGtldXBFQzh2eEx2emF2cDRxM2lJSFM4OEJIZlpXaUNYblMxREZWc0E5ZnJTMlBEVWhkOFVGNDBWbDVacXEvcC92L0cveklUSmdRN0lYalRGbHJMalc1VnZvWkh4SjJvdzUxU25UdXNzQmFPSERadVFEVmZ3Q1dPaEVFZnlwVVpZR2c1Y2F1VVZTN3lrdWV0TDV6Um9vYUxKWHQ2a01tdlAvMEhhUTdKUW5tM3pHRUFiK0lsWjI5SnFTWDJiYVlGclY0RlppQ21MZVRuOUh0T1hvbnZIbHFZWjZVNzdLVGl0aTFFa2tyVytVeHpZMXM3aWZJMDFycENoblZEblBwTEtGcWRKcFVtMFZzWFJ1TkEyNmVlVkdaWFhPYz0tLTZoVW9XMzJuV0doLys5Y3UxNngxOFE9PQ%3D%3D--1cac2424c270f93e630e78a91a59326644cf5ee8;
          remember_token=SLLRrvtYchvNLhWHJR3FVg; remember_token_NURSERY_production=SLLRrvtYchvNLhWHJR3FVg]
      User-Agent: [python-requests/2.20.0]
    method: POST
    uri: http://52.27.43.242:81/json
  response:
    body: {string: '[{"id":89341,"name":"precondition","content":"def validate_property
        sample, field_name\r\n  validation_block = Proc.new\r\n  property = sample.properties[field_name]\r\n  if
        property.nil?\r\n    raise \"Could not find property #{field_name}\"\r\n  end\r\n  validation_block.call(sample,
        property)\r\nend\r\n\r\n# Appends associates msgs to plan and operation\r\ndef
        precondition_warnings op, msgs, key=:precondition_warnings, sep=\";\"\r\n  plan
        = op.plan\r\n  if plan\r\n    plan_msg = op.plan.get key\r\n    plan_msgs
        = plan_msg.split(sep).map { |x| x.strip } if plan_msg\r\n  end\r\n  plan_msgs
        ||= []\r\n  op_msgs = []\r\n\r\n  msgs.each { |valid, m|\r\n    if valid\r\n      plan_msgs.delete(m)\r\n    else\r\n      plan_msgs
        \u003c\u003c m\r\n      op_msgs \u003c\u003c m\r\n    end\r\n  }\r\n  op_msgs.uniq!\r\n  plan_msgs.uniq!\r\n\r\n  op.associate
        key, op_msgs.join(sep + \" \")\r\n  op.plan.associate key, plan_msgs.join(sep
        + \" \") if op.plan\r\nend\r\n\r\ndef precondition(op)\r\n  ready = true\r\n  msgs
        = []\r\n  \r\n  #output fragment must have length!\r\n  if op.output(\"Fragment\").sample.properties[\"Length\"].nil?
        || op.output(\"Fragment\").sample.properties[\"Length\"] \u003c= 0\r\n      op.associate(\"Output
        Fragment must have a defined length!\", \"\")\r\n      return false\r\n  end\r\n\r\n  #
        Validate sample, valid_block, valid_message\r\n  [\"Forward Primer\", \"Reverse
        Primer\"].each do |n|\r\n    sample = op.input(n).sample\r\n\r\n    msgs \u003c\u003c
        validate_property(sample, \"T Anneal\") { |s, property|\r\n      validator
        = Proc.new { |p| p.to_f.between?(0.01, 100) }\r\n      msg = \"T Anneal #{property}
        for Primer \\\"#{s.name}\\\" is invalid\"\r\n      [validator.call(property),
        msg]\r\n    }\r\n  end\r\n  msgs.select! { |valid, m| !valid }\r\n  msgs.compact!\r\n  precondition_warnings
        op, msgs\r\n  ready = false if msgs.any?\r\n  ready\r\nend","parent_id":1539,"parent_class":"OperationType","created_at":"2018-10-29T15:42:08.000-07:00","updated_at":"2018-10-29T15:42:08.000-07:00","user_id":193}]'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Connection: [keep-alive]
      Content-Type: [application/json; charset=utf-8]
      Date: ['Thu, 01 Nov 2018 04:14:50 GMT']
      ETag: [W/"4dd4909fb58bc604d032e5785de0b916"]
      Server: [nginx/1.10.3 (Ubuntu)]
      Set-Cookie: [XSRF-TOKEN=IpX5H5NwPm%2BkAaT6CLFk4c1md8lxYSV9n1vgMQqfIvJ5pa32NcMb6xbRQTFaRLr2sAMdKtKapUzhJ84forNwew%3D%3D;
          path=/, _aquarium_NURSERY_production_session=V2I5bmFKQ0I0Mlp1TVhlK3RUaXpjSXhweUd2cEp2QndFTzBsazNkTWJWekhpRjRSaHIyWGhDaFRyN3VMMklLNi8yNFZONnVhWHNJNmhNRTBqYzQ5VlhRb2F4UmV1YmtPRmpjdkNVNlkwcjVaSjViNG5MMGNlbWJ3ZFJTdlc2OUxlSVcyaGprdHRMN0xmd2Z6elZzb0NtWjVoYkY2ZWRYZnF6UDQxNWk3T3FoVXMvdXdrZm44STh5K0REMloyWUtRUkVXaXlLYWhsS0xqdlB1UHdDTzR4Sy8vSFVTSFhvWklCdXl3ZHhYeE1pdFhhS1Y1NERBd05UeHVhbGJFaXI1dzNTSHJSamQ4aW93NndhbVhQZ1hYR2JhY0ZiUzNNdFA1dE9sRXltVzBxVGZGRGdiVjFTN3R0NUN4THVUdzA3RGd5V2poSEZZeVlzZGYxdXpLVUU1dFNVekp5Sm9HTS9UNkhtK3lOUGpmMjl0ck9IcjRKd1Y3K01Oem5pOXNaUVo0WVIxeGQ5UU5JcGxFRTVkK0UrTEdtRGwvRHd0bnFMQVE0SFFhYTR5UU5NMD0tLUsrbEdrSG5VaFRJS2JxTWRzbStqa3c9PQ%3D%3D--f7ee054b31d25bb8f6e14b2dc1358301bccd6539;
          path=/; HttpOnly]
      Vary: [Origin]
      X-Content-Type-Options: [nosniff]
      X-Frame-Options: [SAMEORIGIN]
      X-Request-Id: [ea99f170-b01d-4276-9e4a-e958c3e93a9c]
      X-Runtime: ['0.057503']
      X-XSS-Protection: [1; mode=block]
    status: {code: 200, message: OK}
version: 1
