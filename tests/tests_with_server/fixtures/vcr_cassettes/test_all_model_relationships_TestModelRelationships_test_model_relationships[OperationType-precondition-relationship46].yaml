interactions:
- request:
    body: '{"model": "OperationType", "method": "where", "arguments": {}, "options":
      {"offset": -1, "limit": 1, "reverse": true}}'
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Connection: [keep-alive]
      Content-Length: ['118']
      Content-Type: [application/json]
      Cookie: [XSRF-TOKEN=Z7rOeOl0mCZIsf6WVfIT5KppzC6Bp5fLC%2FTb4WKBtgZsb3Npd5LqCB38ABz5zCom4vMMBCi%2Fb5gLtY6c5X%2BcgQ%3D%3D;
          _aquarium_NURSERY_production_session=dFQwOEdTbEI3ZnREa1VWblNJNXAxMVVQUzEycitIK1lkZWdmQjNackxGTy9YSjZZUTJtZjFERTc1S1M2WlJ6QmVKOWlISHhtU29IL1gvcy80dCt6MHZnNFdoMnM2ZFlNTnIzOHNNU1d5MEcyTTE5S2ZvSG9EV0JTaWUrdVR6STBKWEp5Mk5qM01kMVF2QUw5dExtNjYrOGRUbTkvM2FoWFJNR3JkNVFYNmJkSzd1YXRDa3U3dm12YUNOT1ZuOWF2cjBBZ05adEt1aE9ldkZZT010MkdBb0lWcnA3K3Rrb2NSUGtnSlgxN2U2V0c4amJaNXF5ZjhDMDlXcW54VjBxTDc1TnJERzRpUnorcHhrWHhVL0pUYUprZlVTRjNkVTByeHcyWis0VjdUR252Q0gvcm02RSsvMzhBSTkrVytaMlpQNGNhVTZSdkJQcTZlMktSMDBOdGhTbVJjTklMNGdGRVEvNmpMTVloWllzMVI3a1RrbHE4MEN5S3Z6MWh4bDU0NjdyeEd5M0FlY0VGUXUvL2FXQ2RjUjZNT3djeVkxWlZCMDhPQWh6S1dWYz0tLWtNU0I0dGhOMkZWMUlBWUR4S29JZ3c9PQ%3D%3D--865ef42f75263dd463f5aabd5a92e5029404008d;
          remember_token=SLLRrvtYchvNLhWHJR3FVg; remember_token_NURSERY_production=SLLRrvtYchvNLhWHJR3FVg]
      User-Agent: [python-requests/2.20.0]
    method: POST
    uri: http://52.27.43.242:81/json
  response:
    body: {string: '[{"id":1539,"name":"Make PCR Fragment (copy)","category":"ZAbeTest","deployed":false,"on_the_fly":false,"created_at":"2018-10-29T14:37:27.000-07:00","updated_at":"2018-10-29T14:39:02.000-07:00"}]'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Connection: [keep-alive]
      Content-Type: [application/json; charset=utf-8]
      Date: ['Thu, 01 Nov 2018 04:19:54 GMT']
      ETag: [W/"cac7a4ab9d35e701807538ddac13bc65"]
      Server: [nginx/1.10.3 (Ubuntu)]
      Set-Cookie: [XSRF-TOKEN=evr1dMKRW%2B40IP3MYtsIJD24mnCP0ictwQ0LtWm6j4BxL0hlXHcpwGFtA0bO5THmdSJaWibK337BTF7I7kSlBw%3D%3D;
          path=/, _aquarium_NURSERY_production_session=ejRydHRvK0xPdkE2Y0YzTElHL0dvVnpVTTlCejFKN0VVV3JZTVVpKzlqa2liUFVMRHhXNHBoL1dqOGJVZmhWVDM3TFJIUzI4SVY3dHFUK0xNYzRsM1QrTVNsaldoV01ibUZFT0w1T0xsYWtxSjZiY3VPdktQT0VFeG9mR0ZlRHRhb2ZGdlJ6MGh3L1lwMjlzNW5Jc2ZvUzA5Q2FIQ3MrUGdBT0J4VW9JSGhJdlFPc2UvV0EyZm1lR1JJR1BQenZBYlFwNGxmOVdFZ01lNXRVc3o3Y1lkb01IbWcvczJhMFJxeXlqK3BEcHJrbmk2Skg1QVVObHFiS1JVZEJiNjlTVEJQN3F5VDkzRUtxNUc5M3E1MHlreVFmOEFaM0RrOVBZYnowTnpzWkk4R3lTelJldjBHOXFmb1pObk5ZRis2TjdiemFxVXJrdEoxVmtDR0VvUlY3aU1ZemIwckxzaTR1WlBsdHpRN2J3a1pqSWhBU3lMMTk2ZjZoR0J3V1QybWd6VXo5VkcvNVdtbHN6OG1FSHhKMVFyb2hHQTdiUjNxUlYrZ1pyMExKeTJxQT0tLXhhMmNZeFZ0WVo0TUZhNVk4Vk50M2c9PQ%3D%3D--8fda915206e1d3e7be7b1f2997b110629c0c997b;
          path=/; HttpOnly]
      Vary: [Origin]
      X-Content-Type-Options: [nosniff]
      X-Frame-Options: [SAMEORIGIN]
      X-Request-Id: [5ce96204-6bd0-48de-b5d3-d218048e64e5]
      X-Runtime: ['0.004575']
      X-XSS-Protection: [1; mode=block]
    status: {code: 200, message: OK}
- request:
    body: '{"model": "Code", "method": "where", "arguments": {"parent_id": 1539, "parent_class":
      "OperationType", "name": "precondition"}, "options": {"offset": -1, "limit":
      1, "reverse": true}}'
    headers:
      Accept: ['*/*']
      Accept-Encoding: ['gzip, deflate']
      Connection: [keep-alive]
      Content-Length: ['183']
      Content-Type: [application/json]
      Cookie: [XSRF-TOKEN=Z7rOeOl0mCZIsf6WVfIT5KppzC6Bp5fLC%2FTb4WKBtgZsb3Npd5LqCB38ABz5zCom4vMMBCi%2Fb5gLtY6c5X%2BcgQ%3D%3D;
          _aquarium_NURSERY_production_session=dFQwOEdTbEI3ZnREa1VWblNJNXAxMVVQUzEycitIK1lkZWdmQjNackxGTy9YSjZZUTJtZjFERTc1S1M2WlJ6QmVKOWlISHhtU29IL1gvcy80dCt6MHZnNFdoMnM2ZFlNTnIzOHNNU1d5MEcyTTE5S2ZvSG9EV0JTaWUrdVR6STBKWEp5Mk5qM01kMVF2QUw5dExtNjYrOGRUbTkvM2FoWFJNR3JkNVFYNmJkSzd1YXRDa3U3dm12YUNOT1ZuOWF2cjBBZ05adEt1aE9ldkZZT010MkdBb0lWcnA3K3Rrb2NSUGtnSlgxN2U2V0c4amJaNXF5ZjhDMDlXcW54VjBxTDc1TnJERzRpUnorcHhrWHhVL0pUYUprZlVTRjNkVTByeHcyWis0VjdUR252Q0gvcm02RSsvMzhBSTkrVytaMlpQNGNhVTZSdkJQcTZlMktSMDBOdGhTbVJjTklMNGdGRVEvNmpMTVloWllzMVI3a1RrbHE4MEN5S3Z6MWh4bDU0NjdyeEd5M0FlY0VGUXUvL2FXQ2RjUjZNT3djeVkxWlZCMDhPQWh6S1dWYz0tLWtNU0I0dGhOMkZWMUlBWUR4S29JZ3c9PQ%3D%3D--865ef42f75263dd463f5aabd5a92e5029404008d;
          remember_token=SLLRrvtYchvNLhWHJR3FVg; remember_token_NURSERY_production=SLLRrvtYchvNLhWHJR3FVg]
      User-Agent: [python-requests/2.20.0]
    method: POST
    uri: http://52.27.43.242:81/json
  response:
    body: {string: '[{"id":89341,"name":"precondition","content":"def validate_property
        sample, field_name\r\n  validation_block = Proc.new\r\n  property = sample.properties[field_name]\r\n  if
        property.nil?\r\n    raise \"Could not find property #{field_name}\"\r\n  end\r\n  validation_block.call(sample,
        property)\r\nend\r\n\r\n# Appends associates msgs to plan and operation\r\ndef
        precondition_warnings op, msgs, key=:precondition_warnings, sep=\";\"\r\n  plan
        = op.plan\r\n  if plan\r\n    plan_msg = op.plan.get key\r\n    plan_msgs
        = plan_msg.split(sep).map { |x| x.strip } if plan_msg\r\n  end\r\n  plan_msgs
        ||= []\r\n  op_msgs = []\r\n\r\n  msgs.each { |valid, m|\r\n    if valid\r\n      plan_msgs.delete(m)\r\n    else\r\n      plan_msgs
        \u003c\u003c m\r\n      op_msgs \u003c\u003c m\r\n    end\r\n  }\r\n  op_msgs.uniq!\r\n  plan_msgs.uniq!\r\n\r\n  op.associate
        key, op_msgs.join(sep + \" \")\r\n  op.plan.associate key, plan_msgs.join(sep
        + \" \") if op.plan\r\nend\r\n\r\ndef precondition(op)\r\n  ready = true\r\n  msgs
        = []\r\n  \r\n  #output fragment must have length!\r\n  if op.output(\"Fragment\").sample.properties[\"Length\"].nil?
        || op.output(\"Fragment\").sample.properties[\"Length\"] \u003c= 0\r\n      op.associate(\"Output
        Fragment must have a defined length!\", \"\")\r\n      return false\r\n  end\r\n\r\n  #
        Validate sample, valid_block, valid_message\r\n  [\"Forward Primer\", \"Reverse
        Primer\"].each do |n|\r\n    sample = op.input(n).sample\r\n\r\n    msgs \u003c\u003c
        validate_property(sample, \"T Anneal\") { |s, property|\r\n      validator
        = Proc.new { |p| p.to_f.between?(0.01, 100) }\r\n      msg = \"T Anneal #{property}
        for Primer \\\"#{s.name}\\\" is invalid\"\r\n      [validator.call(property),
        msg]\r\n    }\r\n  end\r\n  msgs.select! { |valid, m| !valid }\r\n  msgs.compact!\r\n  precondition_warnings
        op, msgs\r\n  ready = false if msgs.any?\r\n  ready\r\nend","parent_id":1539,"parent_class":"OperationType","created_at":"2018-10-29T15:42:08.000-07:00","updated_at":"2018-10-29T15:42:08.000-07:00","user_id":193}]'}
    headers:
      Cache-Control: ['max-age=0, private, must-revalidate']
      Connection: [keep-alive]
      Content-Type: [application/json; charset=utf-8]
      Date: ['Thu, 01 Nov 2018 04:19:54 GMT']
      ETag: [W/"4dd4909fb58bc604d032e5785de0b916"]
      Server: [nginx/1.10.3 (Ubuntu)]
      Set-Cookie: [XSRF-TOKEN=60yjDA2QzuG9q4hb1JLBhHTL5fR%2Fwp3k6ypK0WvBeBngmR4dk3a8z%2BjmdtF4rPhGPFEl3tbaZbfrax%2Bs7D9Sng%3D%3D;
          path=/, _aquarium_NURSERY_production_session=RUhMTTk2OGZzN2NwSmlITG1IU091UUY2NUpQSGlhY2lGWG9va1lwUUh4UzdHcEhwR0NrbTVaY00yd09NWE5lSzZKelFmVFNxWGF2cGRSQllmZDhCeW90Z0JHYmFYLzQyWXN3RUEra1FKQThrS0wrS3JyYzVJM05JMS81L29aZnZyejBVdC9OdVF6eUpHdGoveTVmR0NHcFhpb1hOSHdpdGE2cjZHajdnNjV0NXRGNWR4R2VsS1FNU3paSXhLaW1LMFl2OHVJWmFEaVBrNnJKbi9yQ29TK2J0MHVoSnFuMlNIcDVpSEoyWEhjYm9taW82UEVqUksweHpHenVVRmlGWHg0VGRTMUswZzFIcU96V2paSlAxMzRIdEtiaUszVHRzQlRmSUpsSFdrb1BqUHZFQlhCOEhUQ3pnOXQxT1BlYys2YlZ3b203VGtPN0NoTUVlWXlSeXhZcGxIMDIzNmNzNmFrZGtMY1pWelRKN2drUjVraUMwUmxDMDdISjBrVGE2NWVjNnFiTUFsM0MxdmFFK21tYUt4TmRHZ1JBVXBNcXZCbFhoYUlmNDlDTT0tLTBXcklFK2dNd29GVDcrYTZ2UWF1cWc9PQ%3D%3D--d2b14b70f0a455e9b4424d2faac5232cd9d10abf;
          path=/; HttpOnly]
      Vary: [Origin]
      X-Content-Type-Options: [nosniff]
      X-Frame-Options: [SAMEORIGIN]
      X-Request-Id: [4a4f0afb-7bec-499d-a6a8-bda5eb7b1b80]
      X-Runtime: ['0.058486']
      X-XSS-Protection: [1; mode=block]
    status: {code: 200, message: OK}
version: 1
